TITLE HITBALL (EXE)
.MODEL SMALL
.STACK 200H
;-----------------------------------
.DATA
  HOME_FILE DB 'hb-menu.txt', 00H
  ERROR_STR DB "Error!$"
  FILE_HANDLE DW ?
  HOME_STR DB 1896 DUP('$')

  PLAYER_HEAD DB  "O$"
  PLAYER_BODY DB "-|-$"
  PLAYER_FEET DB "/ \$"

  PLAYER1_HEAD_ROW DB 22
  PLAYER1_HEAD_COL DB 38
  PLAYER1_BODY_ROW DB 23
  PLAYER1_BODY_COL DB 37
  PLAYER1_FEET_ROW DB 24
  PLAYER1_FEET_COL DB 37

  PLAYER2_HEAD_ROW DB 00
  PLAYER2_HEAD_COL DB 38
  PLAYER2_BODY_ROW DB 01
  PLAYER2_BODY_COL DB 37
  PLAYER2_FEET_ROW DB 02
  PLAYER2_FEET_COL DB 37

  PLAYER1_MOVE_FLAG DB 0    ; 0 - stop ; 1 - left ; 2 - right
  PLAYER2_MOVE_FLAG DB 0    ; 0 - stop ; 1 - left ; 2 - right

  BALL DB "*$"

  BALL1_ROW DB 21
  BALL1_COL DB 3
  BALL2_ROW DB 21
  BALL2_COL DB 11
  BALL3_ROW DB 21
  BALL3_COL DB 19
  BALL4_ROW DB 21
  BALL4_COL DB 27
  BALL5_ROW DB 21
  BALL5_COL DB 35
  BALL6_ROW DB 21
  BALL6_COL DB 43
  BALL7_ROW DB 21
  BALL7_COL DB 51
  BALL8_ROW DB 21
  BALL8_COL DB 59
  BALL9_ROW DB 21
  BALL9_COL DB 67
  BALL10_ROW DB 21
  BALL10_COL DB 75
  BALL11_ROW DB 03
  BALL11_COL DB 3
  BALL12_ROW DB 03 
  BALL12_COL DB 11
  BALL13_ROW DB 03 
  BALL13_COL DB 19
  BALL14_ROW DB 03 
  BALL14_COL DB 27
  BALL15_ROW DB 03 
  BALL15_COL DB 35
  BALL16_ROW DB 03 
  BALL16_COL DB 43
  BALL17_ROW DB 03 
  BALL17_COL DB 51
  BALL18_ROW DB 03 
  BALL18_COL DB 59
  BALL19_ROW DB 03 
  BALL19_COL DB 67
  BALL20_ROW DB 03 
  BALL20_COL DB 75
;-----------------------------------
.CODE
MAIN PROC FAR
  MOV AX, @data
  MOV DS, AX
  MOV ES, AX

INIT_HOME:
  CALL INIT_HOME_STR

MENU:
  CALL DISP_HOME

GAME:
  CALL PLAY

EXIT:
    MOV   AX, 4C00H
    INT   21H
MAIN ENDP
;-----------------------------------
INIT_HOME_STR PROC NEAR
OPEN_HOME_FILE:
  MOV AH, 3DH           
  MOV AL, 00            
  LEA DX, HOME_FILE
  INT 21H
  JC DISPLAY_ERROR
  MOV FILE_HANDLE, AX

READ_HOME_FILE:
  MOV AH, 3FH           
  MOV BX, FILE_HANDLE    
  MOV CX, 1895          
  LEA DX, HOME_STR   
  INT 21H
  JC DISPLAY_ERROR
  CMP AX, 00            
  JE DISPLAY_ERROR

CLOSE_HOME_FILE:
  MOV AH, 3EH           
  MOV BX, FILE_HANDLE    
  INT 21H
  JMP RETURN

DISPLAY_ERROR:
  LEA DX, ERROR_STR
  MOV AH, 09
  INT 21H

EXIT2:
    MOV AX, 4C00H
    INT 21H 

RETURN:
  RET
INIT_HOME_STR ENDP
;-----------------------------------
DISP_HOME PROC NEAR 

HOME_COLOR:
   CALL SET_HOME_COLOR

HOME_POS:
   MOV DX, 0100H
     PUSH DX
   CALL SET_HOME_POS

DISPLAY_HOME: 
  LEA DX, HOME_STR
  MOV AH, 09
  INT 21H

IS_ENTER:
  MOV AH, 10H
    INT 16H
    CMP AL, 0DH
    JE PLAY_GAME
    JMP IS_ENTER

PLAY_GAME:
  RET
DISP_HOME ENDP
;-------------------------------------
SET_HOME_COLOR PROC NEAR      
  MOV AX, 0600H
  MOV BH, 01H
  MOV CX, 0000H
  MOV DX, 184FH
  INT 10H
  RET
SET_HOME_COLOR ENDP
;-------------------------------------
SET_HOME_POS PROC NEAR
  POP BX
  POP DX
  PUSH BX
  MOV AH, 02H   
  MOV BH, 00    
  MOV DH, 00   
  MOV DL, 00   
  INT 10H

  RET
SET_HOME_POS ENDP
;-------------------------------------
PLAY PROC NEAR
PLAY_LOOP:
BALL_COLOR:
  CALL SET_BALL_COLOR

BALL1_POSITION:
  MOV DH, BALL1_ROW
  MOV DL, BALL1_COL
  PUSH DX
  CALL SET_CURSOR

DISPLAY_BALL1:
  LEA DX, BALL
  MOV AH, 09
  INT 21H 

BALL2_POSITION:
  MOV DH, BALL2_ROW
  MOV DL, BALL2_COL
  PUSH DX
  CALL SET_CURSOR

DISPLAY_BALL2:
  LEA DX, BALL
  MOV AH, 09
  INT 21H 

BALL3_POSITION:
  MOV DH, BALL3_ROW
  MOV DL, BALL3_COL
  PUSH DX
  CALL SET_CURSOR

DISPLAY_BALL3:
  LEA DX, BALL
  MOV AH, 09
  INT 21H 

BALL4_POSITION:
  MOV DH, BALL4_ROW
  MOV DL, BALL4_COL
  PUSH DX
  CALL SET_CURSOR

DISPLAY_BALL4:
  LEA DX, BALL
  MOV AH, 09
  INT 21H 

BALL5_POSITION:
  MOV DH, BALL5_ROW
  MOV DL, BALL5_COL
  PUSH DX
  CALL SET_CURSOR

DISPLAY_BALL5:
  LEA DX, BALL
  MOV AH, 09
  INT 21H 

BALL6_POSITION:
  MOV DH, BALL6_ROW
  MOV DL, BALL6_COL
  PUSH DX
  CALL SET_CURSOR

DISPLAY_BALL6:
  LEA DX, BALL
  MOV AH, 09
  INT 21H 

BALL7_POSITION:
  MOV DH, BALL7_ROW
  MOV DL, BALL7_COL
  PUSH DX
  CALL SET_CURSOR

DISPLAY_BALL7:
  LEA DX, BALL
  MOV AH, 09
  INT 21H 

BALL8_POSITION:
  MOV DH, BALL8_ROW
  MOV DL, BALL8_COL
  PUSH DX
  CALL SET_CURSOR

DISPLAY_BALL8:
  LEA DX, BALL
  MOV AH, 09
  INT 21H 

BALL9_POSITION:
  MOV DH, BALL9_ROW
  MOV DL, BALL9_COL
  PUSH DX
  CALL SET_CURSOR

DISPLAY_BALL9:
  LEA DX, BALL
  MOV AH, 09
  INT 21H 

BALL10_POSITION:
  MOV DH, BALL10_ROW
  MOV DL, BALL10_COL
  PUSH DX
  CALL SET_CURSOR

DISPLAY_BALL10:
  LEA DX, BALL
  MOV AH, 09
  INT 21H 

BALL11_POSITION:
  MOV DH, BALL11_ROW
  MOV DL, BALL11_COL
  PUSH DX
  CALL SET_CURSOR

DISPLAY_BALL11:
  LEA DX, BALL
  MOV AH, 09
  INT 21H 

BALL12_POSITION:
  MOV DH, BALL12_ROW
  MOV DL, BALL12_COL
  PUSH DX
  CALL SET_CURSOR

DISPLAY_BALL12:
  LEA DX, BALL
  MOV AH, 09
  INT 21H 

BALL13_POSITION:
  MOV DH, BALL13_ROW
  MOV DL, BALL13_COL
  PUSH DX
  CALL SET_CURSOR

DISPLAY_BALL13:
  LEA DX, BALL
  MOV AH, 09
  INT 21H 

BALL14_POSITION:
  MOV DH, BALL14_ROW
  MOV DL, BALL14_COL
  PUSH DX
  CALL SET_CURSOR

DISPLAY_BALL14:
  LEA DX, BALL
  MOV AH, 09
  INT 21H 

BALL15_POSITION:
  MOV DH, BALL15_ROW
  MOV DL, BALL15_COL
  PUSH DX
  CALL SET_CURSOR

DISPLAY_BALL15:
  LEA DX, BALL
  MOV AH, 09
  INT 21H 

BALL16_POSITION:
  MOV DH, BALL16_ROW
  MOV DL, BALL16_COL
  PUSH DX
  CALL SET_CURSOR

DISPLAY_BALL16:
  LEA DX, BALL
  MOV AH, 09
  INT 21H 

BALL17_POSITION:
  MOV DH, BALL17_ROW
  MOV DL, BALL17_COL
  PUSH DX
  CALL SET_CURSOR

DISPLAY_BALL17:
  LEA DX, BALL
  MOV AH, 09
  INT 21H 

BALL18_POSITION:
  MOV DH, BALL18_ROW
  MOV DL, BALL18_COL
  PUSH DX
  CALL SET_CURSOR

DISPLAY_BALL18:
  LEA DX, BALL
  MOV AH, 09
  INT 21H 

BALL19_POSITION:
  MOV DH, BALL19_ROW
  MOV DL, BALL19_COL
  PUSH DX
  CALL SET_CURSOR

DISPLAY_BALL19:
  LEA DX, BALL
  MOV AH, 09
  INT 21H 

BALL20_POSITION:
  MOV DH, BALL20_ROW
  MOV DL, BALL20_COL
  PUSH DX
  CALL SET_CURSOR

DISPLAY_BALL20:
  LEA DX, BALL
  MOV AH, 09
  INT 21H 

PLAYER1_COLOR:
  CALL SET_PLAYER1_COLOR

PLAYER1_HEAD_POSITION:
    MOV DH, PLAYER1_HEAD_ROW
    MOV DL, PLAYER1_HEAD_COL
    PUSH DX
    CALL SET_CURSOR

DISPLAY_PLAYER1_HEAD:
  LEA DX, PLAYER_HEAD
  MOV AH, 09
  INT 21H

PLAYER1_BODY_POSITION:
    MOV DH, PLAYER1_BODY_ROW
    MOV DL, PLAYER1_BODY_COL
    PUSH DX
    CALL SET_CURSOR

DISPLAY_PLAYER1_BODY:
  LEA DX, PLAYER_BODY
  MOV AH, 09
  INT 21H

PLAYER1_FEET_POSITION:
    MOV DH, PLAYER1_FEET_ROW
    MOV DL, PLAYER1_FEET_COL
    PUSH DX
    CALL SET_CURSOR

DISPLAY_PLAYER1_FEET:
  LEA DX, PLAYER_FEET
  MOV AH, 09
  INT 21H

PLAYER2_COLOR:
  CALL SET_PLAYER2_COLOR

PLAYER2_HEAD_POSITION:
    MOV DH, PLAYER2_HEAD_ROW
    MOV DL, PLAYER2_HEAD_COL
    PUSH DX
    CALL SET_CURSOR

DISPLAY_PLAYER2_HEAD:
  LEA DX, PLAYER_HEAD
  MOV AH, 09
  INT 21H

PLAYER2_BODY_POSITION:
    MOV DH, PLAYER2_BODY_ROW
    MOV DL, PLAYER2_BODY_COL
    PUSH DX
    CALL SET_CURSOR

DISPLAY_PLAYER2_BODY:
  LEA DX, PLAYER_BODY
  MOV AH, 09
  INT 21H

PLAYER2_FEET_POSITION:
    MOV DH, PLAYER2_FEET_ROW
    MOV DL, PLAYER2_FEET_COL
    PUSH DX
    CALL SET_CURSOR

DISPLAY_PLAYER2_FEET:
  LEA DX, PLAYER_FEET
  MOV AH, 09
  INT 21H

REMOVE_CURSOR:
  CALL CURSOR_REMOVE

KEY_PRESSED:
    MOV AH, 01H   
    INT 16H
    JNZ IS_VALID_INPUT
    CALL DELAY
    JMP UPDATE_PLAYER_POS

IS_VALID_INPUT:
  CALL DELAY
  MOV AH, 00H
    INT 16H

IS_PLAYER1_RIGHT:
  CMP AH, 4DH
  JE PLAYER1_RIGHT
  
IS_PLAYER1_LEFT:
  CMP AH, 4BH
  JE PLAYER1_LEFT

IS_PLAYER2_RIGHT:
  CMP AL, 100
  JE PLAYER2_RIGHT

IS_PLAYER2_LEFT:
  CMP AL, 97
  JE PLAYER2_LEFT

IS_ESC:
  CMP AL, 27
  JE EXIT3
  JMP UPDATE_PLAYER_POS_JMP

EXIT3:
    MOV AX, 4C00H
    INT 21H 

UPDATE_PLAYER_POS_JMP:
  JMP UPDATE_PLAYER_POS

PLAYER1_RIGHT:
  MOV AL, 2
  MOV PLAYER1_MOVE_FLAG, AL
  
  JMP UPDATE_PLAYER_POS

PLAYER1_LEFT:
  MOV AL, 1
  MOV PLAYER1_MOVE_FLAG, AL
  
  JMP UPDATE_PLAYER_POS

PLAYER2_RIGHT:
  MOV AL, 2
  MOV PLAYER2_MOVE_FLAG, AL
  
  JMP UPDATE_PLAYER_POS

PLAYER2_LEFT:
  MOV AL, 1
  MOV PLAYER2_MOVE_FLAG, AL
  
UPDATE_PLAYER_POS:
UPDATE_PLAYER1_POS:
  MOV AL, PLAYER1_MOVE_FLAG

IS_PLAYER1_MOVE_LEFT:
  CMP AL, 1
  JE IS_PLAYER1_LEFT_BOUND
  JMP IS_PLAYER1_MOVE_RIGHT

IS_PLAYER1_LEFT_BOUND:
  MOV BL, PLAYER1_HEAD_COL
  CMP BL, 2
  JE PLAYER1_STOP
  JMP PLAYER1_MOVE_LEFT

PLAYER1_STOP:
  MOV BL, 0
  MOV PLAYER1_MOVE_FLAG, BL
  JMP UPDATE_PLAYER2_POS

IS_PLAYER1_MOVE_RIGHT:
  CMP AL, 2
  JE IS_PLAYER1_RIGHT_BOUND
  JMP UPDATE_PLAYER2_POS

IS_PLAYER1_RIGHT_BOUND:
  MOV BL, PLAYER1_HEAD_COL
  CMP BL, 77
  JE PLAYER1_STOP
  JMP PLAYER1_MOVE_RIGHT

PLAYER1_MOVE_LEFT:
  MOV BL, PLAYER1_HEAD_COL
  DEC BL
  MOV PLAYER1_HEAD_COL, BL

  MOV BL, PLAYER1_BODY_COL
  DEC BL
  MOV PLAYER1_BODY_COL, BL

  MOV BL, PLAYER1_FEET_COL
  DEC BL
  MOV PLAYER1_FEET_COL, BL

  JMP UPDATE_PLAYER2_POS

PLAYER1_MOVE_RIGHT:
  MOV BL, PLAYER1_HEAD_COL
  INC BL
  MOV PLAYER1_HEAD_COL, BL

  MOV BL, PLAYER1_BODY_COL
  INC BL
  MOV PLAYER1_BODY_COL, BL

  MOV BL, PLAYER1_FEET_COL
  INC BL
  MOV PLAYER1_FEET_COL, BL

UPDATE_PLAYER2_POS:
  MOV AL, PLAYER2_MOVE_FLAG

IS_PLAYER2_MOVE_LEFT:
  CMP AL, 1
  JE IS_PLAYER2_LEFT_BOUND
  JMP IS_PLAYER2_MOVE_RIGHT

IS_PLAYER2_LEFT_BOUND:
  MOV BL, PLAYER2_HEAD_COL
  CMP BL, 2
  JE PLAYER2_STOP
  JMP PLAYER2_MOVE_LEFT

PLAYER2_STOP:
  MOV BL, 0
  MOV PLAYER2_MOVE_FLAG, BL
  JMP PLAY_LOOP

IS_PLAYER2_MOVE_RIGHT:
  CMP AL, 2
  JE IS_PLAYER2_RIGHT_BOUND
  JMP PLAY_LOOP

IS_PLAYER2_RIGHT_BOUND:
  MOV BL, PLAYER2_HEAD_COL
  CMP BL, 77
  JE PLAYER2_STOP
  JMP PLAYER2_MOVE_RIGHT  

PLAYER2_MOVE_LEFT:
  MOV BL, PLAYER2_HEAD_COL
  DEC BL
  MOV PLAYER2_HEAD_COL, BL

  MOV BL, PLAYER2_BODY_COL
  DEC BL
  MOV PLAYER2_BODY_COL, BL

  MOV BL, PLAYER2_FEET_COL
  DEC BL
  MOV PLAYER2_FEET_COL, BL

  JMP PLAY_LOOP

PLAYER2_MOVE_RIGHT:
  MOV BL, PLAYER2_HEAD_COL
  INC BL
  MOV PLAYER2_HEAD_COL, BL

  MOV BL, PLAYER2_BODY_COL
  INC BL
  MOV PLAYER2_BODY_COL, BL

  MOV BL, PLAYER2_FEET_COL
  INC BL
  MOV PLAYER2_FEET_COL, BL

  JMP PLAY_LOOP
  
  RET
PLAY ENDP
;---------------------------------------------
SET_BALL_COLOR PROC NEAR
  MOV AX, 0600H   
  MOV BH, 03H     
  MOV CX, 0300H   
  MOV DX, 154FH   
  INT 10H

  RET
SET_BALL_COLOR ENDP
;---------------------------------------------
SET_PLAYER1_COLOR PROC NEAR
  MOV AX, 0600H   
  MOV BH, 01H     
  MOV CX, 1600H   
  MOV DX, 184FH   
  INT 10H

  RET
SET_PLAYER1_COLOR ENDP
;---------------------------------------------
SET_PLAYER2_COLOR PROC NEAR
  MOV AX, 0600H   
  MOV BH, 04H     
  MOV CX, 0000H   
  MOV DX, 024FH   
  INT 10H

  RET
SET_PLAYER2_COLOR ENDP
;---------------------------------------------
SET_CURSOR PROC NEAR
  POP BX
  POP DX
  PUSH BX
  MOV AH, 02H   
  MOV BH, 00    
  INT 10H

  RET
SET_CURSOR ENDP
;---------------------------------------------
DELAY PROC NEAR
  MOV BP, 2 
  MOV SI, 2 
DELAY2:
  DEC BP
  NOP
  JNZ DELAY2
  DEC SI
  CMP SI,0
  JNZ DELAY2
  RET
DELAY ENDP
;---------------------------------------------
CURSOR_REMOVE PROC NEAR
  POP BX
  POP DX
  PUSH BX
  MOV AH, 02H   
  MOV BH, 00    
  MOV DH, 25   
  MOV DL, 80 
  INT 10H

  RET
CURSOR_REMOVE ENDP
END MAIN